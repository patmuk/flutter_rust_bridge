"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[3571],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},i=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,s(s({ref:t},i),{},{components:r})):n.createElement(f,s({ref:t},i))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6636:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},s="Constructors",c={unversionedId:"guides/miscellaneous/constructors",id:"guides/miscellaneous/constructors",title:"Constructors",description:"Firstly, when a Rust struct has synchronous new method,",source:"@site/docs/guides/miscellaneous/constructors.md",sourceDirName:"guides/miscellaneous",slug:"/guides/miscellaneous/constructors",permalink:"/flutter_rust_bridge/guides/miscellaneous/constructors",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/miscellaneous/constructors.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Properties",permalink:"/flutter_rust_bridge/guides/miscellaneous/properties"},next:{title:"Codec",permalink:"/flutter_rust_bridge/guides/miscellaneous/codec"}},u={},l=[],i={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"constructors"},"Constructors"),(0,a.kt)("p",null,"Firstly, when a Rust struct has synchronous ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," method,\nit will automatically become the default constructor in Dart.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"pub struct MyStruct {\n    ...\n}\n\nimpl MyStruct {\n    #[frb(sync)]\n    pub fn new() -> Self { ... }\n}\n")),(0,a.kt)("p",null,"will become:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"var a = MyStruct(); // calls the `fn new()` on Rust side\n")),(0,a.kt)("p",null,"The reason why the ",(0,a.kt)("inlineCode",{parentName:"p"},"sync")," is needed is that,\nthings are async by default to ensure Flutter thread (isolate) is never blocked."),(0,a.kt)("p",null,"Secondly, you can construct your object freely using whatever method name and synchronousness,\nand they will be simply static methods and nothing special happens.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"impl MyStruct {\n    pub fn new_with_name(name: String) -> Self { ... }\n\n    #[frb(sync)]\n    pub fn new_from_pieces(a: String, b: i32, c: Vec<u8>) -> Self { ... }\n\n    pub async fn whatever_you_like(x: (String, String)) -> Self { ... }\n}\n")),(0,a.kt)("p",null,"can be used as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"var a = await MyStruct.newWithName(...);\nvar b = MyStruct.newFromPieces(...);\nvar c = await MyStruct.whateverYouLike(...);\n")))}p.isMDXComponent=!0}}]);
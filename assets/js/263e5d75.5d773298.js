"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[6595],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),f=i,m=d["".concat(s,".").concat(f)]||d[f]||c[f]||o;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4648:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(7462),i=(t(7294),t(3905));const o={},a="frb_override_* prefix",l={unversionedId:"guides/miscellaneous/override-prefix",id:"guides/miscellaneous/override-prefix",title:"frb_override_* prefix",description:"If a method name starts with frboverride,",source:"@site/docs/guides/miscellaneous/override-prefix.md",sourceDirName:"guides/miscellaneous",slug:"/guides/miscellaneous/override-prefix",permalink:"/flutter_rust_bridge/guides/miscellaneous/override-prefix",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/guides/miscellaneous/override-prefix.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dart Isolates",permalink:"/flutter_rust_bridge/guides/miscellaneous/isolates"},next:{title:"Rename Dart types",permalink:"/flutter_rust_bridge/guides/miscellaneous/dart-type-rename"}},s={},u=[{value:"Example",id:"example",level:2}],p={toc:u};function c(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"frb_override_-prefix"},(0,i.kt)("inlineCode",{parentName:"h1"},"frb_override_*")," prefix"),(0,i.kt)("p",null,"If a method name starts with ",(0,i.kt)("inlineCode",{parentName:"p"},"frb_override_"),",\nthen it will be automatically recognized as if it does not have that prefix,\nand it gains privilege to override other existing methods (i.e. remove methods with same name)."),(0,i.kt)("p",null,"This is helpful when wanting to override existing methods,\nand also helpful when the name conflicts (such as in ",(0,i.kt)("inlineCode",{parentName:"p"},"#[ext]"),")."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"impl MyStruct {\n    pub fn frb_override_hello(&self, a: i32) -> i32 {}\n}\n")),(0,i.kt)("p",null,"Then it is equivalent to ",(0,i.kt)("inlineCode",{parentName:"p"},"fn hello(...)")," with privilege."))}c.isMDXComponent=!0}}]);